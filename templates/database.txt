import { Application } from '@mineralts/core-preview'
import { DatabaseConfig } from '@mineralts/storage-preview'

const environment = Application.singleton().resolveBinding('Mineral/Core/Environment')

const databaseConfig: DatabaseConfig = {
  connection: environment.resolveKey('DB_CONNECTION'),

  connections: {
    /*
    |--------------------------------------------------------------------------
    | SQLite
    |--------------------------------------------------------------------------
    |
    | Configuration for the SQLite database.
    | Make sure to install the driver from npm when using this connection
    |
    | npm i sqlite3
    |
    */
    sqlite: {
      client: 'sqlite',
      databaseLocation: environment.resolveKey('DB_NAME'),
    },

    /*
    |--------------------------------------------------------------------------
    | Postgres
    |--------------------------------------------------------------------------
    |
    | Configuration for the Postgres database.
    | Make sure to install the driver from npm when using this connection
    |
    | npm i pg
    |
    */
    postgres: {
      client: 'postgres',
      host: environment.resolveKey('DB_HOST'),
      user: environment.resolveKey('DB_USER'),
      password: environment.resolveKey('DB_PASSWORD'),
      port: environment.resolveKey('DB_PORT'),
      database: environment.resolveKey('DB_NAME'),
    },

    /*
    |--------------------------------------------------------------------------
    | MariaDB
    |--------------------------------------------------------------------------
    |
    | Configuration for the MariaDB database.
    | Make sure to install the driver from npm when using this connection
    |
    | npm i mariadb
    |
    */
    mariadb: {
      client: 'mariadb',
      host: environment.resolveKey('DB_HOST'),
      user: environment.resolveKey('DB_USER'),
      password: environment.resolveKey('DB_PASSWORD'),
      port: environment.resolveKey('DB_PORT'),
      database: environment.resolveKey('DB_NAME'),
    }
  }
}

export default databaseConfig